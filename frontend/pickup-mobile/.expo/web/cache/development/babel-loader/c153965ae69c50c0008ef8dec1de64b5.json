{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/aryan/Projects/PickUp/frontend/pickup-mobile/components/Register.js\";\nimport React, { useState, useEffect } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport { useHistory } from \"react-router-dom\";\nimport Firebase from \"../config/firebase\";\nexport default function Register() {\n  var history = useHistory();\n\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      email = _useState2[0],\n      setEmail = _useState2[1];\n\n  var _useState3 = useState(null),\n      _useState4 = _slicedToArray(_useState3, 2),\n      password = _useState4[0],\n      setPassword = _useState4[1];\n\n  var _useState5 = useState(null),\n      _useState6 = _slicedToArray(_useState5, 2),\n      password2 = _useState6[0],\n      setPassword2 = _useState6[1];\n\n  var doRegister = function doRegister(email, password) {\n    Firebase.auth().createUserWithEmailAndPassword(email, password).then(function (user) {\n      var userUID = user.uid;\n      console.log(userUID);\n    });\n  };\n\n  var handlePress = function handlePress() {\n    if (password !== password2) {\n      console.log(\"Passwords don't match\");\n    } else if (!password.match(/^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])[0-9a-zA-Z]{8,}$/)) {\n      console.log(\"Password must be at least 8 characters long and contain an uppercase and lowercase character\");\n    } else {\n      doRegister(email, password);\n    }\n  };\n\n  var handleEmail = function handleEmail(email) {\n    setEmail(email);\n  };\n\n  var handlePassword = function handlePassword(password) {\n    setPassword(password);\n  };\n\n  var handlePassword2 = function handlePassword2(password2) {\n    setPassword2(password2);\n  };\n\n  return React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }\n  }, \"Register Component\"), React.createElement(TextInput, {\n    style: styles.input,\n    placeholder: \"Enter your email\",\n    onChangeText: handleEmail,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }\n  }), React.createElement(TextInput, {\n    style: styles.input,\n    placeholder: \"Enter a password\",\n    secureTextEntry: true,\n    onChangeText: handlePassword,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }\n  }), React.createElement(TextInput, {\n    style: styles.input,\n    placeholder: \"Confirm your password\",\n    secureTextEntry: true,\n    onChangeText: handlePassword2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }\n  }), React.createElement(Button, {\n    title: \"Submit Form\",\n    onPress: handlePress,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }\n  }));\n}\nvar styles = StyleSheet.create({\n  input: {\n    height: 40,\n    margin: 12,\n    borderWidth: 1\n  }\n});","map":{"version":3,"sources":["/Users/aryan/Projects/PickUp/frontend/pickup-mobile/components/Register.js"],"names":["React","useState","useEffect","useHistory","Firebase","Register","history","email","setEmail","password","setPassword","password2","setPassword2","doRegister","auth","createUserWithEmailAndPassword","then","user","userUID","uid","console","log","handlePress","match","handleEmail","handlePassword","handlePassword2","styles","input","StyleSheet","create","height","margin","borderWidth"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { StyleSheet, Text, View, Button, TextInput } from 'react-native';\nimport { useHistory } from \"react-router-dom\";\nimport Firebase from '../config/firebase';\n\nexport default function Register() {\n\n    let history = useHistory();\n    const [email, setEmail] = useState(null);\n    const [password, setPassword] = useState(null);\n    const [password2, setPassword2] = useState(null);\n\n    const doRegister = (email, password) => {\n        Firebase.auth().createUserWithEmailAndPassword(email, password)\n            .then(user => {\n                const userUID = user.uid;\n                console.log(userUID);\n            })\n    }\n\n    const handlePress = () => {\n        if (password !== password2) {\n            console.log(\"Passwords don't match\");\n        }\n        else if (!password.match(/^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])[0-9a-zA-Z]{8,}$/)) {\n            console.log(\"Password must be at least 8 characters long and contain an uppercase and lowercase character\");\n        }\n        else {\n            doRegister(email, password);\n        }\n    }\n\n    const handleEmail = (email) => {\n        setEmail(email);\n    }\n\n    const handlePassword = (password) => {\n        setPassword(password);\n    }\n\n    const handlePassword2 = (password2) => {\n        setPassword2(password2);\n    }\n\n    return (\n        <View>\n            <Text>Register Component</Text>\n            <TextInput\n                style={styles.input}\n                placeholder=\"Enter your email\"\n                onChangeText={handleEmail}\n            />\n            <TextInput\n                style={styles.input}\n                placeholder=\"Enter a password\"\n                secureTextEntry={true}\n                onChangeText={handlePassword}\n            />\n            <TextInput\n                style={styles.input}\n                placeholder=\"Confirm your password\"\n                secureTextEntry={true}\n                onChangeText={handlePassword2}\n            />\n            <Button\n                title=\"Submit Form\"\n                onPress={handlePress}\n            />\n        </View>\n    )\n}\n\nconst styles = StyleSheet.create({\n    input: {\n        height: 40,\n        margin: 12,\n        borderWidth: 1,\n    },\n});"]},"metadata":{},"sourceType":"module"}